{"version":3,"file":"index.js","mappings":"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","sources":["webpack://node-typescript-setup/./src/api/controllers/index.ts","webpack://node-typescript-setup/./src/api/controllers/type-controller.ts","webpack://node-typescript-setup/./src/api/controllers/variable-controller.ts","webpack://node-typescript-setup/./src/api/dao/dynamodb/type-dao.ts","webpack://node-typescript-setup/./src/api/dao/dynamodb/variable-dao.ts","webpack://node-typescript-setup/./src/api/models/models-provider.ts","webpack://node-typescript-setup/./src/api/models/schemas/type-schema.ts","webpack://node-typescript-setup/./src/api/models/schemas/variable-schema.ts","webpack://node-typescript-setup/./src/api/services/type/dynamodb/dynamodb-type.ts","webpack://node-typescript-setup/./src/api/services/variable/dynamodb/dynamodb-variable.ts","webpack://node-typescript-setup/./src/app.ts","webpack://node-typescript-setup/./src/ioc/invensify.config.ts","webpack://node-typescript-setup/./src/ioc/type.ts","webpack://node-typescript-setup/external commonjs \"aws-sdk\"","webpack://node-typescript-setup/external commonjs \"dynamoose\"","webpack://node-typescript-setup/external commonjs \"express\"","webpack://node-typescript-setup/external commonjs \"inversify\"","webpack://node-typescript-setup/external commonjs \"inversify-express-utils\"","webpack://node-typescript-setup/external commonjs \"reflect-metadata\"","webpack://node-typescript-setup/external commonjs \"swagger-ui-express\"","webpack://node-typescript-setup/external commonjs \"yamljs\"","webpack://node-typescript-setup/webpack/bootstrap","webpack://node-typescript-setup/webpack/before-startup","webpack://node-typescript-setup/webpack/startup","webpack://node-typescript-setup/webpack/after-startup"],"sourcesContent":["\n//  variable\nimport \"./variable-controller\"\n// type\nimport \"./type-controller\"","\nimport { inject, injectable } from \"inversify\";\nimport { controller, httpPost, interfaces, requestBody } from \"inversify-express-utils\";\nimport { TYPES } from \"src/ioc/type\";\nimport { TypeService } from \"../services/type/dynamodb/dynamodb-type\";\n\n\n@controller(\"/type\")\nexport class Typecontroller implements interfaces.Controller {\n    constructor(\n        @inject(TYPES.TypeService) private readonly typeService: TypeService\n    ) {}\n\n    @httpPost(\"/create\")\n    public async create(\n        @requestBody() data\n    ): Promise<any> {\n        try {\n            const result = await this.typeService.create(data)\n            return result\n        } catch (err) {\n            console.log('err', err)\n        } \n    }\n}","\nimport { inject } from \"inversify\";\nimport { controller, httpGet, httpPost, interfaces, queryParam, requestBody, requestParam } from \"inversify-express-utils\";\nimport { TYPES } from \"src/ioc/type\";\nimport { VariableService } from \"../services/variable/dynamodb/dynamodb-variable\";\n\n\n@controller(\"/variable\")\nexport class VariableController implements interfaces.Controller {\n    constructor(\n        @inject(TYPES.VariableService) private variableService: VariableService\n    ) {}\n\n    @httpPost(\"/create\")\n    public async create(\n        @requestBody() data\n    ): Promise<void> {\n        try {\n            const result = await this.variableService.create(data);\n            return result\n        } catch (err) {\n            console.log('err', err)\n        } \n    }\n\n    @httpGet(\"/getType\") // test\n    public async getRelationType() {\n        try {\n            const result = await this.variableService.getRelationType();\n            return result\n        } catch (err) {\n            console.log('err', err)\n        }\n    }\n\n    @httpGet(\"getStart\")\n    public async getStartAll(\n        @queryParam(\"startAt\") startAt, // ?startAt=10\n        @queryParam(\"limit\") limit, // limit=10\n    ) {\n        try {\n            const result = await this.variableService.getStartAtLimit(startAt, limit);\n            return result;\n        } catch (err) {\n            console.log('err',err)\n        }\n    }\n}","import { AnyDocument } from \"dynamoose/dist/Document\";\nimport { ModelType } from \"dynamoose/dist/General\";\nimport { inject, injectable } from \"inversify\";\nimport { TYPES } from \"src/ioc/type\";\nimport { ITypeDao } from \"../type.dao\";\n\n@injectable()\nexport class TypeDao implements ITypeDao {\n    constructor(\n        @inject(TYPES.TypeModel) private readonly typeModel: ModelType<AnyDocument>\n    ) {}\n\n    private async lengthTable() {\n        const length = await this.typeModel.scan().count().exec();\n        return length\n    }\n    public async create(data) {\n        const { count } = await this.lengthTable()\n        try {\n            const result = await this.typeModel.create({\n                id: Number(count) + 1,\n                name: data.name,\n                description: data.description,\n                sk: data.sk,\n            });\n            return result; \n        } catch (err) {\n            console.log('err', err)\n        }  \n    }\n}","import { AnyDocument } from \"dynamoose/dist/Document\";\nimport { ModelType } from \"dynamoose/dist/General\";\nimport { inject, injectable } from \"inversify\";\nimport { TYPES } from \"src/ioc/type\";\nimport { IVariableDao } from \"../variable.dao\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n@injectable()\nexport class VariableDao implements IVariableDao {\n    constructor(\n        @inject(TYPES.VariableModel)\n        private readonly variableModel: ModelType<AnyDocument>\n    ) {}\n\n    private async lengthTable() {\n        const length = await this.variableModel.scan().count().exec();\n        return length\n    }\n\n    public async create(data): Promise<any> {\n        const { count } = await this.lengthTable()\n        try {\n            const result = await this.variableModel.create({\n                id: Number(count) + 1,\n                userId: data.userId,\n                variable: data.variable,\n                description: data.description,\n                typeId: data.typeId,\n                mean: data.mean,\n                sk: data.sk,\n            });\n            return result; \n        } catch (err) {\n            console.log('err', err)\n        }       \n    }\n\n    public async getRelationType() { // test\n        const result = await this.variableModel.get({\"id\": 1, \"sk\": \"test\"})\n    }\n\n    public async getStartAtLimit(startAt, limit) {\n        const response = await this.variableModel.scan().limit(startAt).exec();\n        const result = await this.variableModel.scan().startAt(response.lastKey).limit(limit).exec();\n        const resultSerialize = result.map((res) => res.serialize())\n        return resultSerialize\n    }\n}","import { ModelType } from \"dynamoose/dist/General\";\nimport { Document } from \"dynamoose/dist/Document\";\nimport * as dynamoose from \"dynamoose\";\nimport { VariableSchema } from \"./schemas/variable-schema\";\nimport { TypeSchema } from \"./schemas/type-schema\";\n\nexport class ModelsProvider {\n  private static instance: ModelsProvider;\n\n  private variablesModel!: ModelType<Document>;\n  private typeModel!: ModelType<Document>;\n\n  public static getInstance(): ModelsProvider {\n    if (!ModelsProvider.instance) {\n      ModelsProvider.instance = new ModelsProvider();\n    }\n\n    return ModelsProvider.instance;\n  }\n\n  public getVariableModel(): ModelType<Document> {\n    if (!this.variablesModel) {\n      this.variablesModel = dynamoose.model(\"variables\", VariableSchema);\n    }\n\n    return this.variablesModel;\n  }\n\n  public getTypeModel(): ModelType<Document> {\n    if (!this.typeModel) {\n      this.typeModel = dynamoose.model(\"types\", TypeSchema);\n    }\n\n    return this.typeModel;\n  }\n}\n","import * as dynamoose from \"dynamoose\";\n\nexport const TypeSchema = new dynamoose.Schema(\n  {\n    id: {\n      type: Number,\n      hashKey: true,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    sk: {\n      type: String,\n      rangeKey: true, // จำเป็นมาก\n      required: true\n    }\n  },\n  {\n    timestamps: {\n      createdAt: \"CreateDate\",\n      updatedAt: \"UpdateDate\",\n    },\n  }\n);\n","import * as dynamoose from \"dynamoose\";\n\nexport const VariableSchema = new dynamoose.Schema(\n  {\n    id: {\n      type: Number,\n      hashKey: true,\n      required: true,\n    },\n    userId: {\n      type: Number,\n      required: true,\n    },\n    variable: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    typeId: {\n      type: Number,\n      required: true,\n    },\n    mean: {\n      type: String,\n      required: true,\n    },\n    sk: {\n      type: String,\n      rangeKey: true, // จำเป็นมาก\n      required: true\n    }\n  },\n  {\n    timestamps: {\n      createdAt: \"CreateDate\",\n      updatedAt: \"UpdateDate\",\n    },\n  }\n);\n","import { inject, injectable } from \"inversify\";\nimport { TypeDao } from \"src/api/dao/dynamodb/type-dao\";\nimport { TYPES } from \"src/ioc/type\";\nimport { ITypeService } from \"../type-service\";\n\n\n@injectable()\nexport class TypeService implements ITypeService {\n    constructor(\n        @inject(TYPES.TypeDao) private readonly typeDao: TypeDao\n    ) {}\n    \n    async create(data) {\n        return this.typeDao.create(data);\n    }\n}","import { inject, injectable } from \"inversify\";\nimport { IVariableDao } from \"src/api/dao/variable.dao\";\nimport { TYPES } from \"src/ioc/type\";\nimport { IVariableService } from \"../variable-service\";\n\n@injectable() \nexport class VariableService implements IVariableService {\n    constructor(\n        @inject(TYPES.VariableDao) private readonly variableDao: IVariableDao\n    ) {}\n\n    public async create(data) {\n        const result = await this.variableDao.create(data);\n        console.log('service', result)\n        return result\n    }\n\n    public async getRelationType() {\n        const result = await this.variableDao.getRelationType();\n        return result;\n    }\n\n    public async getStartAtLimit(startAt, limit) {\n        const result = await this.variableDao.getStartAtLimit(startAt, limit);\n        return result\n    }\n}","import \"reflect-metadata\"; // สำคัญมาก in บรรทัด 1\nimport express from \"express\";\nimport swaggerUi from \"swagger-ui-express\";\nimport YAML from \"yamljs\";\nimport container from \"./ioc/invensify.config\";\nimport { InversifyExpressServer } from \"inversify-express-utils\";\n\nconst server = new InversifyExpressServer(container);\nconst port = 3000;\nconst swaggerDocument = YAML.load(\"./swagger.yaml\");\n\nserver\n  .setConfig((app: express.Application): void => {\n    app.use(\"/docs\", swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n    app.use(express.json());\n    // app.use(RequestLogMiddleware.handle, RequestLogMiddleware.responseInterceptor());\n  })\n  .build()\n  .listen(port, () => {\n    console.log(`The service has been up and running on ${port} port`);\n  });\n","import { Container, interfaces } from \"inversify\";\nimport { ModelsProvider } from \"src/api/models/models-provider\";\nimport \"../api/controllers\";\nimport { TYPES } from \"./type\";\nimport * as dynamoose from \"dynamoose\";\nimport { ModelType } from \"dynamoose/dist/General\";\nimport { AnyDocument } from \"dynamoose/dist/Document\";\nimport { VariableDao } from \"src/api/dao/dynamodb/variable-dao\";\nimport { IVariableDao } from \"src/api/dao/variable.dao\";\nimport { VariableService } from \"src/api/services/variable/dynamodb/dynamodb-variable\";\nimport { IVariableService } from \"src/api/services/variable/variable-service\";\nimport { ITypeDao } from \"src/api/dao/type.dao\";\nimport { TypeDao } from \"src/api/dao/dynamodb/type-dao\";\nimport { ITypeService } from \"src/api/services/type/type-service\";\nimport { TypeService } from \"src/api/services/type/dynamodb/dynamodb-type\";\nimport { DynamoDB } from \"aws-sdk\";\n\nconst container = new Container();\n// Table\ncontainer\n  .bind<ModelsProvider>(TYPES.ModelsProvider)\n  .toDynamicValue(() => ModelsProvider.getInstance())\n  .inSingletonScope()\n  .onActivation((context: interfaces.Context, injectable: ModelsProvider) => {\n    // dynamoose.aws.ddb.local('http://localhost:8000');\n    const dynamoDBClient = new DynamoDB({\n      // region: \"local\",\n      endpoint: \"http://localhost:8000\",\n    });\n    dynamoose.aws.ddb.set(dynamoDBClient);\n\n    return injectable;\n  });\n// variable\ncontainer\n  .bind<ModelType<AnyDocument>>(TYPES.VariableModel)\n  .toDynamicValue((context: interfaces.Context) => {\n    const modelsProvider: ModelsProvider = context.container.get(\n      TYPES.ModelsProvider\n    );\n\n    return modelsProvider.getVariableModel();\n  })\n.inSingletonScope();\ncontainer.bind<IVariableDao>(TYPES.VariableDao).to(VariableDao);\ncontainer.bind<IVariableService>(TYPES.VariableService).to(VariableService);\n// type\ncontainer\n  .bind<ModelType<AnyDocument>>(TYPES.TypeModel)\n  .toDynamicValue((context: interfaces.Context) => {\n    const modelsProvider: ModelsProvider = context.container.get(\n      TYPES.ModelsProvider\n    );\n\n    return modelsProvider.getTypeModel();\n  })\n.inSingletonScope();\ncontainer.bind<ITypeDao>(TYPES.TypeDao).to(TypeDao);\ncontainer.bind<ITypeService>(TYPES.TypeService).to(TypeService);\n\nexport default container;\n","const TYPES = {\n  ModelsProvider: Symbol.for(\"models-provider\"), // dynomodb\n  // variable\n  VariableModel: Symbol.for(\"variable-model\"),\n  VariableDao: Symbol.for(\"variable-dao\"),\n  VariableService: Symbol.for(\"variable-service\"),\n\n  // type\n  TypeModel: Symbol.for(\"type-model\"),\n  TypeDao: Symbol.for(\"type-dao\"),\n  TypeService: Symbol.for(\"type-service\"),\n};\n\nexport { TYPES };\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"dynamoose\");","module.exports = require(\"express\");","module.exports = require(\"inversify\");","module.exports = require(\"inversify-express-utils\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"swagger-ui-express\");","module.exports = require(\"yamljs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/app.ts\");\n",""],"names":[],"sourceRoot":""}